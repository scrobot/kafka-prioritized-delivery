version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      - mongo_cluster
    volumes:
      - mongodb:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 9002:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - mongo_cluster

  consul:
    image: consul
    volumes:
      - consul_data:/bitnami/consul
    networks:
      - cluster
    ports:
      - '8300:8300'
      - '8301:8301'
      - '8301:8301/udp'
      - '8500:8500'
      - '8600:8600'
      - '8600:8600/udp'

  lences:
    image: lensesio/fast-data-dev
    ports:
      - 2181:2181
      - 3030:3030
      - 8081-8083:8081-8083
      - 9581-9585:9581-9585
      - 9092:9092

#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:7.6.2
#    volumes:
#      - "./kibana.yml:/usr/share/kibana/config/kibana.yml"
#    restart: always
#    ports:
#      - 5601:5601
#    links:
#      - elasticsearch
#    depends_on:
#      - elasticsearch
#
#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
#    container_name: es01
#    environment:
#      - node.name=es01
#      - cluster.name=docker-cluster
#      - bootstrap.memory_lock=true
#      - discovery.type=single-node
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#    volumes:
#      - "./esdata:/usr/share/elasticsearch/data"
#    ports:
#      - 9200:9200
#      - 9300:9300
#
#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.6.2
#    volumes:
#      - "./logstash.conf:/config-dir/logstash.conf"
#    restart: always
#    command: logstash -f /config-dir/logstash.conf
#    ports:
#      - 9600:9600
#      - 7777:7777
#    links:
#      - elasticsearch
#      - kafka1

volumes:
  consul_data:
    driver: local
  mongodb:
    driver: local

networks:
  cluster:
    driver: overlay
  mongo_cluster:
    driver: overlay